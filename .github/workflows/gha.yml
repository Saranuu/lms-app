name: pipeline test
on: workflow_dispatch
jobs:
  postgres_database :
    runs-on : self-hosted
    steps :
      - name: create network
        run: |
          if docker network ls --format '{{ .Name }}' | grep -wq lmsnetwork; then
            echo "lmsnetwork exists"
          else
            docker network create lmsnetwork
          fi
      - name: create lmsdb
        run: |
          if docker ps -a --format '{{ .Names }}' | grep -wq lmsdb; then
            echo "lmsdb exists"
          else
            docker container run -dt --name lmsdb -p 5432:5432 --network lmsnetwork -e POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }} postgres
          fi
  Build :
    needs : postgres_database
    runs-on : ubuntu-latest
    steps :
      - name: checkout the code
        uses: actions/checkout@v4.2.2
      - name: build backend image
        run : |
          cd api
          docker build -t ${{ vars.DOCKER_USERNAME }}/api:latest .
      - name: build frontend image
        run : |
          cd webapp
          docker build -t ${{ vars.DOCKER_USERNAME }}/webapp:latest .
      - name: Docker login
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: push images
        run : |
          docker push ${{ vars.DOCKER_USERNAME }}/api:latest
          docker push ${{ vars.DOCKER_USERNAME }}/webapp:latest

  Deploy :
    needs: Build
    runs-on : self-hosted
    steps :
      - name: pull the images
        run : |
          docker pull ${{ vars.DOCKER_USERNAME }}/api:latest
          docker pull ${{ vars.DOCKER_USERNAME }}/webapp:latest
      - name: run api container
        run : |
          if docker ps -a --format '{{ .Names }}' | grep -wq backend; then
            echo "backend exists"
          else
            docker container run -dt --name backend -p 3000:3000 --network lmsnetwork ${{ vars.DOCKER_USERNAME }}/api:latest
          fi
      - name: run webapp

        
          
        
        
